Benjamin Hoertnagl-Pereira
bhoertn1
631-488-7197 
bhoertn1@jhu.edu

Ryan Demo
rdemo1
rdemo1@jhu.edu

600.226.02 CS226 Data Structures
Project 3 - BST Maps
Part B - Balanced Binary Search Tree Implementation

Files:
	MapJHU.java - interface to function similar to Map ADT
	
	AVLMap.java - implementation of the MapJHU.java ADT using binary
	search tree, balancing according to AVL principle
	
	AVLTest.java - test class (not JUnit) we used to debug AVLMap
	
	
Summary:
	We found the most difficult method to write to be the map's remove function because of
	the number of edge cases; specifically, that of removing the root and taking different
	cases for each of the configuration of children on a node. Conceptually, we understood 
	the basics of the rebalancing, which cases to trigger when, and the difference between
	rebalancing after an insert and after a remove. No errors to report.
